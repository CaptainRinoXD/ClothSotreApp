/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package quanlysf.ui;
import quanlysf.Bill_Feature.AutoGenerateID;
import quanlysf.DAO.*;

import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import java.beans.Customizer;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
/**
 *
 * @author dinhd
 */
public class EmployeesSearch extends javax.swing.JFrame {
    private EmployeeDAO employeeDAO;
    private CostumerDAO costumerDAO;
    private ProductDao productDao;
    private ProductTypeDao productTypeDao;
    private BillDAO billDAO;
    private DetailBillDAO detailBillDAO;
    private String previousProductIDValue = "";
    private AutoGenerateID autoGenerateID;
    

    /**
     * Creates new form EmployeesSearch
     */
    public EmployeesSearch() {
        initComponents();
        // Create DAO
        this.setLocationRelativeTo(null);
        try {
            employeeDAO = new EmployeeDaoImp();
            costumerDAO = new CostumerDAOimp();
            productDao = new ProductDaoimp();
            productTypeDao = new ProductTypeImp();
            billDAO = new BillDaoImp();
            detailBillDAO = new DetailBillDaoImp();
            autoGenerateID = new AutoGenerateID();
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(this,"Error" + exc , "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void refreshEmployeeView() {
        // TODO
        try {
            List<Employee> employees = null;
            employees = employeeDAO.getALL();

            //create table and update table
            EmployeeTbModel model = new EmployeeTbModel(employees);
            jTable1.setModel(model);
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(this, "Error" + exc,"Error" , JOptionPane.ERROR_MESSAGE);
        }
    }

    public void refreshProductTypeView() {
        // TODO
        try {
            List<ProductType> productTypes = null;
            productTypes = productTypeDao.getALL();

            //create table and update table
            ProductTypeTbModel model = new ProductTypeTbModel(productTypes);
            jTable3.setModel(model);
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(this, "Error" + exc,"Error" , JOptionPane.ERROR_MESSAGE);
        }
    }

    public void refreshProductView() {
        // TODO
        try {
            List<Product> products = null;
            products = productDao.getALL();

            //create table and update table
            ProductTbModel model = new ProductTbModel(products);
            jTable2.setModel(model);
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(this, "Error" + exc,"Error" , JOptionPane.ERROR_MESSAGE);
        }
    }

        public void refreshCostumerView() {
            // TODO
            try {
                List<Costumer> costumers = null;
                costumers = costumerDAO.getALL();

                //create table and update table
                CostumerTbModel model = new CostumerTbModel(costumers);
                jTable4.setModel(model);
            } catch (Exception exc) {
                JOptionPane.showMessageDialog(this, "Error" + exc,"Error" , JOptionPane.ERROR_MESSAGE);
            }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane = new javax.swing.JTabbedPane();
        ProductPanel = new javax.swing.JPanel();
        btnSearchProduct = new javax.swing.JButton();
        ProductIDtextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnDeleteProduct = new javax.swing.JButton();
        btnUpdateProduct = new javax.swing.JButton();
        btnADDproduct = new javax.swing.JButton();
        btnViewProduct = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        ProductTypesPanel = new javax.swing.JPanel();
        btnSearchProductType = new javax.swing.JButton();
        TypeIDField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btnDeleteProductType = new javax.swing.JButton();
        btnUpdateProductType = new javax.swing.JButton();
        btnADDproductType = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        EmployeePanel = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        employeeIDtextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnADD = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        CostumersPanel = new javax.swing.JPanel();
        btnSearchCustomer = new javax.swing.JButton();
        CustomerIDTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnDeleteCustomer = new javax.swing.JButton();
        btnUpdateCustomer = new javax.swing.JButton();
        btnADDcustomer = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        BillPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        CustomerID_ComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        EmployeeID_ComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Bill_ID_TextFiled = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        EmployeeName_TextField = new javax.swing.JTextField();
        CustomerName_TextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        CustomerPhone_TextField = new javax.swing.JTextField();
        CustomerAddress_TextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnGETid_Button = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        ProductID_ComboBox = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        ProductName_TextField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        ProductPrice_TextField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        Quantity_TextField = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        Total_TextField = new javax.swing.JTextField();
        btnADD_product = new javax.swing.JButton();
        btnSaveBill = new javax.swing.JButton();
        BtnDeleteFromArray = new javax.swing.JButton();
        btnDeleteBill = new javax.swing.JButton();
        btnGetBill = new javax.swing.JButton();
        btnSearchBill = new javax.swing.JButton();
        Bill_ID_search_TextField = new javax.swing.JTextField();
        HelloLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Employee");
        setBackground(new java.awt.Color(0, 0, 0));
        setLocation(new java.awt.Point(0, 1000));
        setLocationByPlatform(true);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(142, 154, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ClothStore Management Software");

        jTabbedPane.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnSearchProduct.setText("Search");
        btnSearchProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchProductActionPerformed(evt);
            }
        });

        ProductIDtextField.setToolTipText("");
        ProductIDtextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductIDtextFieldActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel3.setText("Enter Product ID");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnDeleteProduct.setBackground(new java.awt.Color(236, 232, 255));
        btnDeleteProduct.setText("Delete Product");
        btnDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProductActionPerformed(evt);
            }
        });

        btnUpdateProduct.setBackground(new java.awt.Color(236, 232, 255));
        btnUpdateProduct.setText("Update Product");
        btnUpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnUpdateProductActionPerformed(evt);
                } catch (SQLException | IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });

        btnADDproduct.setBackground(new java.awt.Color(236, 232, 255));
        btnADDproduct.setText("Add Product");
        btnADDproduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDproductActionPerformed(evt);
            }
        });

        btnViewProduct.setBackground(new java.awt.Color(236, 232, 255));
        btnViewProduct.setText("View");
        btnViewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    btnViewProductActionPerformed(evt);
                } catch (SQLException | IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(null);

        jTable2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout ProductPanelLayout = new javax.swing.GroupLayout(ProductPanel);
        ProductPanel.setLayout(ProductPanelLayout);
        ProductPanelLayout.setHorizontalGroup(
            ProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(ProductPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnADDproduct, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdateProduct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteProduct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnViewProduct)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProductIDtextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ProductPanelLayout.setVerticalGroup(
            ProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProductPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ProductPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnADDproduct, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProductIDtextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btnSearchProduct)
                    .addComponent(btnViewProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane.addTab("Products", ProductPanel);

        btnSearchProductType.setText("Search");
        btnSearchProductType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchProductTypeActionPerformed(evt);
            }
        });

        TypeIDField.setToolTipText("");
        TypeIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TypeIDFieldActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel4.setText("Enter Type ID");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnDeleteProductType.setBackground(new java.awt.Color(236, 232, 255));
        btnDeleteProductType.setText("Delete Product");
        btnDeleteProductType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProductTypeActionPerformed(evt);
            }
        });

        btnUpdateProductType.setBackground(new java.awt.Color(236, 232, 255));
        btnUpdateProductType.setText("Update Product");
        btnUpdateProductType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProductTypeActionPerformed(evt);
            }
        });

        btnADDproductType.setBackground(new java.awt.Color(236, 232, 255));
        btnADDproductType.setText("Add Product");
        btnADDproductType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDproductTypeActionPerformed(evt);
            }
        });

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(null);

        jTable3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout ProductTypesPanelLayout = new javax.swing.GroupLayout(ProductTypesPanel);
        ProductTypesPanel.setLayout(ProductTypesPanelLayout);
        ProductTypesPanelLayout.setHorizontalGroup(
            ProductTypesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(ProductTypesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnADDproductType, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdateProductType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteProductType)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 224, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(TypeIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearchProductType, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ProductTypesPanelLayout.setVerticalGroup(
            ProductTypesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProductTypesPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ProductTypesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnADDproductType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateProductType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteProductType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TypeIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btnSearchProductType))
                .addContainerGap())
        );

        jTabbedPane.addTab("Product Types", ProductTypesPanel);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        employeeIDtextField.setToolTipText("");
        employeeIDtextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeIDtextFieldActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel1.setText("Enter Employee ID");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnDelete.setBackground(new java.awt.Color(236, 232, 255));
        btnDelete.setText("Delete Employee");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(236, 232, 255));
        btnUpdate.setText("Update Employee");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnADD.setBackground(new java.awt.Color(236, 232, 255));
        btnADD.setText("Add Employee");
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout EmployeePanelLayout = new javax.swing.GroupLayout(EmployeePanel);
        EmployeePanel.setLayout(EmployeePanelLayout);
        EmployeePanelLayout.setHorizontalGroup(
            EmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnADD, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(employeeIDtextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        EmployeePanelLayout.setVerticalGroup(
            EmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeePanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnADD, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeIDtextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnSearch))
                .addContainerGap())
        );

        btnSearch.getAccessibleContext().setAccessibleDescription("");

        jTabbedPane.addTab("Employees", EmployeePanel);

        btnSearchCustomer.setText("Search");
        btnSearchCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCustomerActionPerformed(evt);
            }
        });

        CustomerIDTextField.setToolTipText("");
        CustomerIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerIDTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel5.setText("Enter Customer ID");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btnDeleteCustomer.setBackground(new java.awt.Color(236, 232, 255));
        btnDeleteCustomer.setText("Delete Customer");
        btnDeleteCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCustomerActionPerformed(evt);
            }
        });

        btnUpdateCustomer.setBackground(new java.awt.Color(236, 232, 255));
        btnUpdateCustomer.setText("Update Costumer");
        btnUpdateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCustomerActionPerformed(evt);
            }
        });

        btnADDcustomer.setBackground(new java.awt.Color(236, 232, 255));
        btnADDcustomer.setText("Add Customer");
        btnADDcustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDcustomerActionPerformed(evt);
            }
        });

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setBorder(null);

        jTable4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTable4);

        javax.swing.GroupLayout CostumersPanelLayout = new javax.swing.GroupLayout(CostumersPanel);
        CostumersPanel.setLayout(CostumersPanelLayout);
        CostumersPanelLayout.setHorizontalGroup(
            CostumersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CostumersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnADDcustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdateCustomer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteCustomer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CustomerIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearchCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane4)
        );
        CostumersPanelLayout.setVerticalGroup(
            CostumersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CostumersPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CostumersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnADDcustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustomerIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(btnSearchCustomer))
                .addContainerGap())
        );

        jTabbedPane.addTab("Customers", CostumersPanel);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel6.setText("Customer ID");

        CustomerID_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerID_ComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel7.setText("Employee ID");

        EmployeeID_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeID_ComboBoxActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel8.setText("Export Date");

        jTextField1.setEditable(false);
        jTextField1.setText("Using System Date");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel9.setText("Bill ID");

        Bill_ID_TextFiled.setEditable(false);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel10.setText("Employee Name");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel11.setText("Customer Name");

        EmployeeName_TextField.setEditable(false);
        EmployeeName_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeName_TextFieldActionPerformed(evt);
            }
        });

        CustomerName_TextField.setEditable(false);
        CustomerName_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerName_TextFieldActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel12.setText("Customer Information");

        CustomerPhone_TextField.setEditable(false);

        CustomerAddress_TextField.setEditable(false);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel13.setText("Phone");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel14.setText("Address");

        btnGETid_Button.setText("Get");
        btnGETid_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGETid_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CustomerID_ComboBox, 0, 164, Short.MAX_VALUE)
                    .addComponent(EmployeeID_ComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Bill_ID_TextFiled))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGETid_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CustomerName_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmployeeName_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(CustomerAddress_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(CustomerPhone_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(Bill_ID_TextFiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(btnGETid_Button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(EmployeeID_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(EmployeeName_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustomerPhone_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustomerID_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel11)
                    .addComponent(CustomerName_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CustomerAddress_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(jTable5);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel15.setText("Product ID");

        ProductID_ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductID_ComboBoxActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel16.setText("Product Name");

        ProductName_TextField.setEditable(false);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel17.setText("Product Price");

        ProductPrice_TextField.setEditable(false);

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("Detail Bill Information");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jLabel19.setText("Quantity");

        Quantity_TextField.setText("0");
        Quantity_TextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quantity_TextFieldActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setText("Total Price");

        Total_TextField.setEditable(false);

        btnADD_product.setText("Add");
        btnADD_product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADD_productActionPerformed(evt);
            }
        });

        btnSaveBill.setBackground(new java.awt.Color(236, 232, 255));
        btnSaveBill.setText("Save Bill");
        btnSaveBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveBillActionPerformed(evt);
            }
        });

        BtnDeleteFromArray.setBackground(new java.awt.Color(236, 232, 255));
        BtnDeleteFromArray.setText("Delete Product");
        BtnDeleteFromArray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDeleteFromArrayActionPerformed(evt);
            }
        });

        btnDeleteBill.setBackground(new java.awt.Color(236, 232, 255));
        btnDeleteBill.setText("Delete Bill");
        btnDeleteBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteBillActionPerformed(evt);
            }
        });

        btnGetBill.setBackground(new java.awt.Color(236, 232, 255));
        btnGetBill.setText("Get Bill");
        btnGetBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetBillActionPerformed(evt);
            }
        });

        btnSearchBill.setBackground(new java.awt.Color(236, 232, 255));
        btnSearchBill.setText("Search");
        btnSearchBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Quantity_TextField)
                            .addComponent(ProductID_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addComponent(btnADD_product, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ProductPrice_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ProductName_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(108, 108, 108)
                                .addComponent(Total_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel20)
                                .addGap(87, 87, 87))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnSaveBill, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BtnDeleteFromArray)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDeleteBill, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGetBill, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Bill_ID_search_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearchBill, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(ProductID_ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnADD_product))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(Quantity_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Total_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(ProductName_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(ProductPrice_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveBill, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnDeleteFromArray, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteBill, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGetBill, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchBill, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Bill_ID_search_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout BillPanelLayout = new javax.swing.GroupLayout(BillPanel);
        BillPanel.setLayout(BillPanelLayout);
        BillPanelLayout.setHorizontalGroup(
            BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BillPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        BillPanelLayout.setVerticalGroup(
            BillPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BillPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("  Detail Bill  ", BillPanel);

        HelloLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlysf/Bill_Feature/Label_HELLO.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HelloLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(HelloLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(26, 26, 26)))
                .addComponent(jTabbedPane))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    

    private void btnADDcustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDcustomerActionPerformed
        CustomerAdd dialog = new CustomerAdd(null, rootPaneCheckingEnabled, EmployeesSearch.this, costumerDAO, null, false);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnADDcustomerActionPerformed

    private void btnUpdateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCustomerActionPerformed
        int objectColumnIndex = CostumerTbModel.OBJECT_COL;
        int row = jTable4.getSelectedRow();

        if (row >= 0) {
            Costumer temCostumer = (Costumer) jTable4.getModel().getValueAt(row, objectColumnIndex);
            System.out.println(temCostumer);

            CustomerAdd dialog = new CustomerAdd(null, rootPaneCheckingEnabled, EmployeesSearch.this, costumerDAO, temCostumer, true);
            dialog.setVisible(true);

            refreshCostumerView();
        } else {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "Customer delete succesfully.","Customer Deleted",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateCustomerActionPerformed

    private void btnDeleteCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCustomerActionPerformed
        int objectColumnIndex = CostumerTbModel.OBJECT_COL;
        int row = jTable4.getSelectedRow();

        if(row >=0) {
            int respone = JOptionPane.showConfirmDialog(EmployeesSearch.this, "Delete this customer?", "Confirm", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
            if (respone != JOptionPane.YES_OPTION) {
                return;
            }
            Costumer tmCostumer = (Costumer) jTable4.getModel().getValueAt(row, objectColumnIndex);
            try {
                costumerDAO.delete(tmCostumer.getCID());
            }  catch (SQLException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }

            refreshCostumerView();
            JOptionPane.showMessageDialog(EmployeesSearch.this, "Customer delete succesfully.","Customer Deleted",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteCustomerActionPerformed

    private void CustomerIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerIDTextFieldActionPerformed

    private void btnSearchCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCustomerActionPerformed
        try {
            String CIDText = CustomerIDTextField.getText();
            List<Costumer> costumers = null;
            if (!CIDText.trim().isEmpty() ) {
                int CID = Integer.parseInt(CIDText);
                costumers = costumerDAO.get(CID);
                CostumerTbModel model = new CostumerTbModel(costumers);
                jTable4.setModel(model);

            }if (CIDText.trim().isEmpty()) {
                costumers = costumerDAO.getALL();
                CostumerTbModel model = new CostumerTbModel(costumers);
                jTable4.setModel(model);

            }if (costumers.isEmpty()){
                JOptionPane.showMessageDialog(EmployeesSearch.this, "No costumers found for the given ID", "Result", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "Invalid ID format", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchCustomerActionPerformed

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        // TODO add your handling code here:

        // Create dialog
        EmployeeAdd dialog = new EmployeeAdd(null, rootPaneCheckingEnabled, EmployeesSearch.this, employeeDAO, null, false);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnADDActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int objectColumnIndex = EmployeeTbModel.OBJECT_COL;
        int row = jTable1.getSelectedRow();

        // Make sure a row is selected
        if (row >= 0) {
            Employee selectedEmployee = (Employee) jTable1.getModel().getValueAt(row, objectColumnIndex);
            // Now 'selectedEmployee' contains the entire Employee object for the selected row.
            System.out.println(selectedEmployee);

            // Add your code to open the EmployeeAdd dialog with the selectedEmployee for updating
            // Example:
            EmployeeAdd dialog = new EmployeeAdd(null, rootPaneCheckingEnabled, EmployeesSearch.this, employeeDAO, selectedEmployee, true);
            dialog.setVisible(true);

        } else {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "You must select an employee", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        //dialog.setVisible(true);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        int objectColumnIndex = EmployeeTbModel.OBJECT_COL;

        if(row <0) {
            JOptionPane.showMessageDialog(EmployeesSearch.this , "You must select an employee", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int respone = JOptionPane.showConfirmDialog(EmployeesSearch.this, "Delete this employee?", "Confirm", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);

        if (respone != JOptionPane.YES_OPTION) {
            return;
        }

        Employee tmEmployee = (Employee) jTable1.getModel().getValueAt(row, objectColumnIndex);
        try {
            employeeDAO.delete(tmEmployee.getId());
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        refreshEmployeeView();

        JOptionPane.showMessageDialog(EmployeesSearch.this, "Employee delete succesfully.","Employee Deleted",JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void employeeIDtextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeIDtextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeIDtextFieldActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            String idText = employeeIDtextField.getText();
            List<Employee> employees = null;
            if (!idText.trim().isEmpty()) {
                int id = Integer.parseInt(idText);
                employees= employeeDAO.get(id);
                EmployeeTbModel model = new EmployeeTbModel(employees);
                jTable1.setModel(model);
                // Now you can use the 'id' to search for the employee

            } if (idText.trim().isEmpty()) {
                employees = employeeDAO.getALL();
                EmployeeTbModel model = new EmployeeTbModel(employees);
                jTable1.setModel(model);

            } if (employees.isEmpty()) {
                JOptionPane.showMessageDialog(EmployeesSearch.this, "No employees found for the given ID", "Result", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "Invalid ID format", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnADDproductTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDproductTypeActionPerformed
        ProductTypeAdd dialog = new ProductTypeAdd(null, rootPaneCheckingEnabled, EmployeesSearch.this, productTypeDao, null, false);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnADDproductTypeActionPerformed

    private void btnUpdateProductTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProductTypeActionPerformed
        int objectColumnIndex = ProductTypeTbModel.Object_COL;
        int row = jTable3.getSelectedRow();

        if (row >= 0) {
            ProductType selectedProductType = (ProductType) jTable3.getModel().getValueAt(row, objectColumnIndex);
            System.out.println(selectedProductType);

            ProductTypeAdd dialog = new ProductTypeAdd(null, rootPaneCheckingEnabled, EmployeesSearch.this, productTypeDao, selectedProductType, true);
            dialog.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "You must select an employee", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateProductTypeActionPerformed

    private void btnDeleteProductTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProductTypeActionPerformed
        int objectColumnIndex = ProductTypeTbModel.Object_COL;
        int row = jTable3.getSelectedRow();

        if(row >=0) {
            int respone = JOptionPane.showConfirmDialog(EmployeesSearch.this, "Delete this product type?", "Confirm", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
            if (respone != JOptionPane.YES_OPTION) {
                return;
            }
            ProductType tmProductType = (ProductType) jTable3.getModel().getValueAt(row, objectColumnIndex);
            try {
                productTypeDao.deleteStr(tmProductType.getTypeID());
                refreshProductTypeView();
                JOptionPane.showMessageDialog(EmployeesSearch.this, "Product type delete succesfully.","Product type Deleted",JOptionPane.INFORMATION_MESSAGE);
            }  catch (SQLException exc) {
                JOptionPane.showMessageDialog(EmployeesSearch.this,"Cannot delete Product Type cause one or more Product are using it.","Error", JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(EmployeesSearch.this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteProductTypeActionPerformed

    private void TypeIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TypeIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TypeIDFieldActionPerformed

    private void btnSearchProductTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchProductTypeActionPerformed
        try {
            String TypeIdText = TypeIDField.getText();
            List<ProductType> productTypes = null;
            if (!TypeIdText.trim().isEmpty()) {
                productTypes= productTypeDao.getStr(TypeIdText);
                ProductTypeTbModel model = new ProductTypeTbModel(productTypes);
                jTable3.setModel(model);
                // Now you can use the 'id' to search for the employee

            } if (TypeIdText.trim().isEmpty()) {
                productTypes = productTypeDao.getALL();
                ProductTypeTbModel model = new ProductTypeTbModel(productTypes);
                jTable3.setModel(model);

            } if (productTypes.isEmpty()) {
                JOptionPane.showMessageDialog(EmployeesSearch.this, "No employees found for the given ID", "Result", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "Invalid ID format", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchProductTypeActionPerformed

    private void btnViewProductActionPerformed(java.awt.event.ActionEvent evt) throws FileNotFoundException, SQLException, IOException {//GEN-FIRST:event_btnViewProductActionPerformed
        // Get the selected row index from jTable2
        int selectedRow = jTable2.getSelectedRow();
        int selectedColumn = ProductTbModel.Object_COL;
        // Check if any row is selected
        if (selectedRow >= 0) {

            Product tmProduct = (Product) jTable2.getModel().getValueAt(selectedRow, selectedColumn);
            int productId = tmProduct.getProductID();
            System.out.println(productDao.get(productId));
            // Now you have the productID, you can fetch the corresponding Product object
            try {
                // Open the ViewProduct dialog and pass the Product object to it
                ViewImage viewProductDialog = new ViewImage(this, true, tmProduct);
                viewProductDialog.setVisible(true);
            } catch (Exception ex) {
                ex.printStackTrace(); // Handle the exception appropriately
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row!", "No Row Selected", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnViewProductActionPerformed

    private void btnADDproductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDproductActionPerformed
        ProductAdd dialog = new ProductAdd(null, rootPaneCheckingEnabled,EmployeesSearch.this, productDao, null, false);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnADDproductActionPerformed

    private void btnUpdateProductActionPerformed(java.awt.event.ActionEvent evt) throws FileNotFoundException, SQLException, IOException {//GEN-FIRST:event_btnUpdateProductActionPerformed
        int objectColumnIndex = ProductTbModel.Object_COL;
        int row = jTable2.getSelectedRow();

        // Kiểm tra xem hàng đã được chọn chưa
        if(row >= 0) { //ListArray bắt đầu từ 0
            Product selectedProduct = (Product) jTable2.getModel().getValueAt(row, objectColumnIndex);
            productDao.get(selectedProduct.getProductID()); //update ảnh trong update dialog
            System.out.println(selectedProduct);

            ProductAdd dialog = new ProductAdd(null, rootPaneCheckingEnabled, EmployeesSearch.this, productDao, selectedProduct, true);
            dialog.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "You must select an product", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateProductActionPerformed

    private void btnDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProductActionPerformed
        int objectColumnIndex = ProductTbModel.Object_COL;
        int row = jTable2.getSelectedRow();

        if(row >=0) {
            int respone = JOptionPane.showConfirmDialog(EmployeesSearch.this, "Delete this product type?", "Confirm", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
            if (respone != JOptionPane.YES_OPTION) {
                return;
            }
            Product tmProduct = (Product) jTable2.getModel().getValueAt(row, objectColumnIndex);
            try {
                productDao.delete(tmProduct.getProductID());
            }  catch (SQLException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }

            refreshProductView();
            JOptionPane.showMessageDialog(EmployeesSearch.this, "Product delete succesfully.","Product Deleted",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteProductActionPerformed

    private void ProductIDtextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductIDtextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductIDtextFieldActionPerformed

    private void btnSearchProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchProductActionPerformed
        try {
            String ProductIDtext = ProductIDtextField.getText();
            List<Product> products = null;
            if (!ProductIDtext.equals(previousProductIDValue)) {
                // Giá trị đã thay đổi, thực hiện các hành động bạn muốn ở đây
                // Ví dụ: Gọi tới phương thức setRowCountToZero trong ProductTbModel
                if ((jTable2.getModel() instanceof ProductTbModel)){
                    ProductTbModel productModel = (ProductTbModel) jTable2.getModel();
                    productModel.setRowCountToZero();
                }
                // Cập nhật giá trị trước đó với giá trị hiện tại
                previousProductIDValue = ProductIDtext;
            }

            if (!ProductIDtext.trim().isEmpty()) {
                int ProductID = Integer.parseInt(ProductIDtext);

                products = productDao.get(ProductID);
                ProductTbModel model = new ProductTbModel(products);
                jTable2.setModel(model);
                model.setRowCountToZero();
            } if (ProductIDtext.trim().isEmpty()) {
                products = productDao.getALL();
                ProductTbModel model = new ProductTbModel(products);
                jTable2.setModel(model);
            } if (products.isEmpty()) {
                JOptionPane.showMessageDialog(EmployeesSearch.this, "No product found for the given ID", "Result", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "Invalid ID format", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "Error: " + exc, "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchProductActionPerformed

    private void btnGETid_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGETid_ButtonActionPerformed
        try {
            productDao.getAll_IDList();
            employeeDAO.getAll_IDList();
            costumerDAO.getAll_IDList();
            
        } catch (SQLException | IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnGETid_ButtonActionPerformed

    private void btnSearchBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBillActionPerformed
        Long Bill_ID_search = Long.parseLong(String.valueOf(Bill_ID_search_TextField.getText()));
        List<Bill> bills = null;
        List<DetailBill> detailBills = null;
        try {
            bills = billDAO.getlong(Bill_ID_search);
            if (bills.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No Bill ID was found", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Bill bill = bills.get(0);
            //System.out.println(bill.getEmID());
            EmployeeID_ComboBox.setSelectedItem(bill.getEmID());
            CustomerID_ComboBox.setSelectedItem(bill.getCID());
            jTextField1.setText(String.valueOf(bill.getExpDate()));
            Bill_ID_TextFiled.setText(Bill_ID_search_TextField.getText());

            detailBills = detailBillDAO.getlong(Bill_ID_search);
            DetailBill_Tb_Model dialog  = new DetailBill_Tb_Model(detailBills);
            jTable5.setModel(dialog);
            
        } catch (NumberFormatException | SQLException exc) {
            JOptionPane.showMessageDialog(this, "Error:" + exc.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnSearchBillActionPerformed

    private void btnGetBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetBillActionPerformed
        Long Bill_ID_search = Long.parseLong(String.valueOf(Bill_ID_TextFiled.getText()));
        List<Bill> bills = null;
        try {
            bills = billDAO.getlong(Bill_ID_search);
            if (bills.isEmpty()) {
                JOptionPane.showMessageDialog(this, "No Bill ID was found", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Bill bill = bills.get(0);
            Bill_Dialog dialog = new Bill_Dialog(null, rootPaneCheckingEnabled, EmployeesSearch.this, bill);
            dialog.setVisible(true);
        } catch (NumberFormatException | SQLException exc) {
            JOptionPane.showMessageDialog(this, "Error:" + exc.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGetBillActionPerformed

    private void btnDeleteBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteBillActionPerformed
        Long Bill_ID_search = Long.parseLong(String.valueOf(Bill_ID_search_TextField.getText()));
        int respone = JOptionPane.showConfirmDialog(EmployeesSearch.this, "Delete Bill?", "Confirm", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if (respone != JOptionPane.YES_OPTION) {
            return;
        }
        try {
            detailBillDAO.deletelong(Bill_ID_search);
            billDAO.deletelong(Bill_ID_search);
            clearTable();

            JOptionPane.showMessageDialog(this, "Successfully Delete Bill", "Delete Bill", JOptionPane.INFORMATION_MESSAGE);
        } catch (NumberFormatException | SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnDeleteBillActionPerformed

    private void BtnDeleteFromArrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDeleteFromArrayActionPerformed
        int row = jTable5.getSelectedRow();
        if (row >= 0) { //ListArray bắt đầu từ 0
            detailBills.remove(row);
            DetailBill_Tb_Model model = new DetailBill_Tb_Model(detailBills);
            jTable5.setModel(model);
            model.fireTableDataChanged();
            System.out.println("Successfully delete");
        } else {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "You must select an product", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BtnDeleteFromArrayActionPerformed

    private void btnSaveBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveBillActionPerformed
        SaveBill();
        SaveDetailBill();
    }//GEN-LAST:event_btnSaveBillActionPerformed

    private void SaveBill() {
        long Bill_ID = Long.parseLong(Bill_ID_TextFiled.getText());
        int EmID = Integer.parseInt(String.valueOf(EmployeeID_ComboBox.getSelectedItem()));
        System.out.println(EmID);
        int CID = Integer.parseInt(String.valueOf(CustomerID_ComboBox.getSelectedItem()));
        System.out.println(CID);
        int respone = JOptionPane.showConfirmDialog(EmployeesSearch.this, "Save Bill?", "Confirm", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);

        if (respone != JOptionPane.YES_OPTION) {
            return;
        } else {
            Bill temBill = new Bill(Bill_ID, EmID, CID, null);
            try {
                billDAO.insert(temBill);
                JOptionPane.showMessageDialog(EmployeesSearch.this, "Bill save succesfully.","Bill Saved",JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception exc) {
                JOptionPane.showMessageDialog(this, "Error Saving Bill:" + exc.getMessage(), "Error",  JOptionPane.ERROR_MESSAGE);
            }
        }
    }//Saving Bill first then saving DetailBill

    private void SaveDetailBill() {
        for (DetailBill detailBill : detailBills) {
            try {
                detailBillDAO.insert(detailBill);
                UpdateProductQuantity(detailBill); //update lại product quantity
                //JOptionPane.showMessageDialog(EmployeesSearch.this, "Bill save succesfully.","Bill Saved",JOptionPane.INFORMATION_MESSAGE);
            } catch (Exception exc) {
                JOptionPane.showMessageDialog(this, "Error Saving Bill:" + exc.getMessage(), "Error",  JOptionPane.ERROR_MESSAGE);
            }
        }
    }//Saving DetailBill

    private void UpdateProductQuantity(DetailBill detailBill ) {
        int Bill_Quantity = detailBill.getDetailBill_Quantity();
        int ProductID = detailBill.getProduct_ID();
        try {
            List<Product> productList = productDao.get(ProductID);
            Product products = productList.get(0);
    
            String TypeID = products.getTypeID();
            String ProductName = products.getProductName();
            int ProductQuanity = products.getProductQuanity() - Bill_Quantity;
            File ProductIamge = products.getProductImage();
            int ExpPrice = products.getExpPirce();
            Product product = new Product(ProductID, TypeID, ProductName, ProductQuanity, ProductIamge, ProductQuanity, ExpPrice, null);
            productDao.update(product);
            refreshProductTypeView(); //refresh lại khi cập nhật
            JOptionPane.showMessageDialog(EmployeesSearch.this, "Update Quatity Successed","Update Quatity",JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception exc) {
            JOptionPane.showMessageDialog(this, "Error update product Quantity:" + exc.getMessage(), "Error",  JOptionPane.ERROR_MESSAGE);
        }
    }//update product quantity

    private void Quantity_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quantity_TextFieldActionPerformed
        ProductID_ComboBoxActionPerformed(evt);
    }//GEN-LAST:event_Quantity_TextFieldActionPerformed

    private void CustomerName_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerName_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerName_TextFieldActionPerformed

    private void EmployeeName_TextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeName_TextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmployeeName_TextFieldActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void ProductID_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductID_ComboBoxActionPerformed
        ProductID_ComboBox.setEditable(true);
        String ProductID_text = String.valueOf(ProductID_ComboBox.getSelectedItem());
        
        if (!ProductID_text.isEmpty() && ProductID_text != null) {
            try {
                int ProductID = Integer.parseInt(ProductID_text);
                List<Product> productList = productDao.get(ProductID);
                if (!productList.isEmpty()) {
                    Product products = productList.get(0);
                    ProductName_TextField.setText(products.getProductName());
                    ProductPrice_TextField.setText(String.valueOf(products.getExpPirce()));
                    calculateTotalPrice(products);
                } else {
                    JOptionPane.showMessageDialog(this, "No product found for the selected ID", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException | SQLException | IOException e) {
                // Handle exceptions (e.g., parsing error, SQL error)
                e.printStackTrace();
                // You might want to show an error message to the user
                //*** ERROR
                //JOptionPane.showMessageDialog(this, "Error retrieving product details", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_ProductID_ComboBoxActionPerformed

    private void EmployeeID_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeID_ComboBoxActionPerformed
        // xóa bỏ thông tin cũ khi Employee hoặc Customer bị thay đổi
        clearTable();

        Long Bill_ID;
        try {
            Bill_ID = Long.parseLong(AutoGenerateID.generateUniqueBillID());
            Bill_ID_TextFiled.setText(String.valueOf(Bill_ID));
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        EmployeeID_ComboBox.setEditable(true);
        String EmIDtext = String.valueOf(EmployeeID_ComboBox.getSelectedItem());
        // Sử dụng (String) EmployeeID_CommboBox.getSlectedItem() rất hay gây lỗi khi Integer.parseInt

        // Check if a selection is made
        if (EmIDtext != null && !EmIDtext.isEmpty()) {
            try {
                // Parse the selected employee ID
                int EmID = Integer.parseInt(EmIDtext);

                // Query the database to get the employee details
                List<Employee> employees = employeeDAO.get(EmID);

                // Check if there is a result in the list
                if (!employees.isEmpty()) {
                    // Get the first employee from the list (assuming only one employee is returned)
                    Employee employee = employees.get(0);

                    // Set the employee name in the EmployeeName_TextField
                    EmployeeName_TextField.setText(employee.getName());
                } else {
                    // Handle the case where no employee is found for the given ID
                    JOptionPane.showMessageDialog(this, "No employee found for the selected ID", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException | SQLException | IOException e) {
                // Handle exceptions (e.g., parsing error, SQL error)
                e.printStackTrace();
                // You might want to show an error message to the user
                JOptionPane.showMessageDialog(this, "Error retrieving employee details", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_EmployeeID_ComboBoxActionPerformed

    private void CustomerID_ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerID_ComboBoxActionPerformed
        // xóa bỏ thông tin cũ khi Employee hoặc Customer bị thay đổi
        clearTable();
        
        String Bill_ID;
        try {
            Bill_ID = AutoGenerateID.generateUniqueBillID();
            Bill_ID_TextFiled.setText(Bill_ID);
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        CustomerID_ComboBox.setEditable(true);
        String CID_text = String.valueOf(CustomerID_ComboBox.getSelectedItem());

        if (CID_text != null && !CID_text.isEmpty()) {
            try {
                int CID = Integer.parseInt(CID_text);
                List<Costumer> costumerList = costumerDAO.get(CID);

                if (!costumerList.isEmpty()) {
                    Costumer costumer = costumerList.get(0);
                    // Chỉ có thể set được khi chọn dữ liệu nào để lấy trong list
                    CustomerName_TextField.setText(costumer.getCname());
                    CustomerAddress_TextField.setText(costumer.getCaddress());
                    CustomerPhone_TextField.setText(String.valueOf(costumer.getCnumber()));
                } else {
                    JOptionPane.showMessageDialog(this, "No customer found for the selected ID", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } catch (NumberFormatException | SQLException | IOException e) {
                // Handle exceptions (e.g., parsing error, SQL error)
                e.printStackTrace();
                // You might want to show an error message to the user
                JOptionPane.showMessageDialog(this, "Error retrieving customer details", "Error", JOptionPane.ERROR_MESSAGE);
                //JOptionPane.showMessageDialog(this, e, CID_text, JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_CustomerID_ComboBoxActionPerformed

    private List<DetailBill> detailBills = new ArrayList<>();
    private void btnADD_productActionPerformed(java.awt.event.ActionEvent evt) {
        //Kiểm tra tình trạng tồn hàng của sản phẩm
        if (QuantityChecking()) {
            JOptionPane.showMessageDialog(this, "Quantity Exceeded or Quantity is set to ZERO", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        long Bill_ID = Long.parseLong(Bill_ID_TextFiled.getText());
        int ProductID = Integer.parseInt(String.valueOf(ProductID_ComboBox.getSelectedItem()));
        int Product_Quantity = Integer.parseInt(String.valueOf(Quantity_TextField.getText()));
        String ProductName = String.valueOf(ProductName_TextField.getText());

        // Gọi hàm action của Quantity_TextField để tính tổng giá tiền trước khi lấy dữ liệu bên dưới
        Quantity_TextFieldActionPerformed(evt);

        long Product_Total = Long.parseLong(String.valueOf(Total_TextField.getText()));
        // Check if ProductID already exists in detailBills
        // Sử dụng Stream ta có thể sử dụng những bộ lọc như
        // .filter(detailBill -> detailBill.getProduct_ID() == ProductID)
        // .forEach(System.out::println);
        boolean containsProductID = detailBills.stream().anyMatch(detailBill -> detailBill.getProduct_ID() == ProductID);
    
        if (!containsProductID) {
            DetailBill temDetailBill = new DetailBill(Bill_ID, ProductID, ProductName, Product_Quantity, Product_Total);
            detailBills.add(temDetailBill);
    
            DetailBill_Tb_Model model = new DetailBill_Tb_Model(detailBills);
            jTable5.setModel(model);
            Quantity_TextField.setText("0");
            
        } else {
            // Handle duplicate ProductID (show a message, etc.)
            JOptionPane.showMessageDialog(this, "ProductID already exists in the list", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void clearTable() {
        //Xóa dữ liệu trong detailBills thuộc kiểu ArrayList<>
        detailBills.clear();

        // Create a new model with the updated list
        DetailBill_Tb_Model model = new DetailBill_Tb_Model(detailBills);

        // Set the new model to the JTable
        jTable5.setModel(model);

        // Notify the JTable that the data has changed
        model.fireTableDataChanged();
    }

    private boolean QuantityChecking() {
        boolean myStmt = false;
        int ProductBill_Quantity = Integer.parseInt(String.valueOf(Quantity_TextField.getText()));
        String ProductID_text = String.valueOf(ProductID_ComboBox.getSelectedItem());
        if (!ProductID_text.isEmpty() && ProductID_text != null) {
            int ProductID = Integer.parseInt(ProductID_text);
            try {
                List<Product> productList = productDao.get(ProductID);
                if (!productList.isEmpty()) {
                    Product products = productList.get(0);
                    int Quantity = products.getProductQuanity();
                    if (ProductBill_Quantity > Quantity || ProductBill_Quantity == 0) {
                        myStmt = true;
                    }
                }
            } catch (Exception exc) {
                exc.printStackTrace();
            }
        }
        return myStmt;
    }

    private void calculateTotalPrice(Product theProduct) {
        try {
            String QuantityText = Quantity_TextField.getText();
            int Quantity = Integer.parseInt(QuantityText);
            int Total_price = Quantity * theProduct.getExpPirce();
            Total_TextField.setText(String.valueOf(Total_price));
        } catch (NumberFormatException exc) {
            JOptionPane.showMessageDialog(EmployeesSearch.this, "Invalid ID format", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeesSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeesSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeesSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeesSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeesSearch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BillPanel;
    private javax.swing.JTextField Bill_ID_TextFiled;
    private javax.swing.JTextField Bill_ID_search_TextField;
    private javax.swing.JButton BtnDeleteFromArray;
    private javax.swing.JPanel CostumersPanel;
    private javax.swing.JTextField CustomerAddress_TextField;
    private javax.swing.JTextField CustomerIDTextField;
    public static javax.swing.JComboBox<String> CustomerID_ComboBox;
    private javax.swing.JTextField CustomerName_TextField;
    private javax.swing.JTextField CustomerPhone_TextField;
    public static javax.swing.JComboBox<String> EmployeeID_ComboBox;
    private javax.swing.JTextField EmployeeName_TextField;
    private javax.swing.JPanel EmployeePanel;
    private javax.swing.JLabel HelloLabel;
    public static javax.swing.JComboBox<String> ProductID_ComboBox;
    private javax.swing.JTextField ProductIDtextField;
    private javax.swing.JTextField ProductName_TextField;
    private javax.swing.JPanel ProductPanel;
    private javax.swing.JTextField ProductPrice_TextField;
    private javax.swing.JPanel ProductTypesPanel;
    private javax.swing.JTextField Quantity_TextField;
    private javax.swing.JTextField Total_TextField;
    private javax.swing.JTextField TypeIDField;
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnADD_product;
    private javax.swing.JButton btnADDcustomer;
    private javax.swing.JButton btnADDproduct;
    private javax.swing.JButton btnADDproductType;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteBill;
    private javax.swing.JButton btnDeleteCustomer;
    private javax.swing.JButton btnDeleteProduct;
    private javax.swing.JButton btnDeleteProductType;
    private javax.swing.JButton btnGETid_Button;
    private javax.swing.JButton btnGetBill;
    private javax.swing.JButton btnSaveBill;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearchBill;
    private javax.swing.JButton btnSearchCustomer;
    private javax.swing.JButton btnSearchProduct;
    private javax.swing.JButton btnSearchProductType;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateCustomer;
    private javax.swing.JButton btnUpdateProduct;
    private javax.swing.JButton btnUpdateProductType;
    private javax.swing.JButton btnViewProduct;
    private javax.swing.JTextField employeeIDtextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables


}
